/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    projects: Project;
    media: Media;
    users: User;
    clients: Client;
    posts: Post;
    pages: Page;
    services: Service;
  };
  globals: {};
}
export interface Project {
  id: string;
  title: string;
  slug?: string;
  logo?: string | Media;
  location: string;
  buildDate: string;
  images?: {
    view: "Front view" | "Back view" | "Left side" | "Right side" | "Top view" | "Interior view" | "Other";
    label?: string;
    image: string | Media;
    id?: string;
    blockName?: string;
    blockType: "project-view";
  }[];
  layout?: {
    layout?: "oneColumn" | "twoThirdsOneThird" | "halfAndHalf" | "threeColumns";
    columnOne: {
      richText: {
        [k: string]: unknown;
      }[];
      enableLink?: boolean;
      link?: {
        type?: "reference" | "custom";
        newTab?: boolean;
        reference:
        | {
          value: string | Page;
          relationTo: "pages";
        }
        | {
          value: string | Post;
          relationTo: "posts";
        }
        | {
          value: string | Project;
          relationTo: "projects";
        };
        url: string;
        label: string;
        appearance?: "default" | "primary" | "secondary";
      };
    };
    columnTwo?: {
      richText: {
        [k: string]: unknown;
      }[];
      enableLink?: boolean;
      link?: {
        type?: "reference" | "custom";
        newTab?: boolean;
        reference:
        | {
          value: string | Page;
          relationTo: "pages";
        }
        | {
          value: string | Post;
          relationTo: "posts";
        }
        | {
          value: string | Project;
          relationTo: "projects";
        };
        url: string;
        label: string;
        appearance?: "default" | "primary" | "secondary";
      };
    };
    columnThree?: {
      richText: {
        [k: string]: unknown;
      }[];
      enableLink?: boolean;
      link?: {
        type?: "reference" | "custom";
        newTab?: boolean;
        reference:
        | {
          value: string | Page;
          relationTo: "pages";
        }
        | {
          value: string | Post;
          relationTo: "posts";
        }
        | {
          value: string | Project;
          relationTo: "projects";
        };
        url: string;
        label: string;
        appearance?: "default" | "primary" | "secondary";
      };
    };
    id?: string;
    blockName?: string;
    blockType: "content";
  }[];
  meta?: {
    title?: string;
    description?: string;
    keywords?: string;
  };
  client?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface Page {
  id: string;
  title: string;
  hero: {
    type: "highImpact" | "mediumImpact" | "lowImpact";
    richText: {
      [k: string]: unknown;
    }[];
    links: {
      link: {
        type?: "reference" | "custom";
        newTab?: boolean;
        reference:
        | {
          value: string | Page;
          relationTo: "pages";
        }
        | {
          value: string | Post;
          relationTo: "posts";
        }
        | {
          value: string | Project;
          relationTo: "projects";
        };
        url: string;
        label: string;
        appearance?: "default" | "primary" | "secondary";
      };
      id?: string;
    }[];
    media: string | Media;
  };
  layout: (
    | {
      layout?: "oneColumn" | "twoThirdsOneThird" | "halfAndHalf" | "threeColumns";
      columnOne: {
        richText: {
          [k: string]: unknown;
        }[];
        enableLink?: boolean;
        link?: {
          type?: "reference" | "custom";
          newTab?: boolean;
          reference:
          | {
            value: string | Page;
            relationTo: "pages";
          }
          | {
            value: string | Post;
            relationTo: "posts";
          }
          | {
            value: string | Project;
            relationTo: "projects";
          };
          url: string;
          label: string;
          appearance?: "default" | "primary" | "secondary";
        };
      };
      columnTwo?: {
        richText: {
          [k: string]: unknown;
        }[];
        enableLink?: boolean;
        link?: {
          type?: "reference" | "custom";
          newTab?: boolean;
          reference:
          | {
            value: string | Page;
            relationTo: "pages";
          }
          | {
            value: string | Post;
            relationTo: "posts";
          }
          | {
            value: string | Project;
            relationTo: "projects";
          };
          url: string;
          label: string;
          appearance?: "default" | "primary" | "secondary";
        };
      };
      columnThree?: {
        richText: {
          [k: string]: unknown;
        }[];
        enableLink?: boolean;
        link?: {
          type?: "reference" | "custom";
          newTab?: boolean;
          reference:
          | {
            value: string | Page;
            relationTo: "pages";
          }
          | {
            value: string | Post;
            relationTo: "posts";
          }
          | {
            value: string | Project;
            relationTo: "projects";
          };
          url: string;
          label: string;
          appearance?: "default" | "primary" | "secondary";
        };
      };
      id?: string;
      blockName?: string;
      blockType: "content";
    }
    | {
      mediaBlockFields: {
        position?: "default" | "wide";
        media: string | Media;
        caption?: {
          [k: string]: unknown;
        }[];
      };
      id?: string;
      blockName?: string;
      blockType: "mediaBlock";
    }
  )[];
  slug?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Post {
  id: string;
  title: string;
  image: string | Media;
  excerpt: {
    [k: string]: unknown;
  }[];
  content: {
    blogContentFields: {
      richText: {
        [k: string]: unknown;
      }[];
    };
    id?: string;
    blockName?: string;
    blockType: "blogContent";
  }[];
  slug?: string;
  author: string | User;
  publishedOn: string;
  updatedAt: string;
  createdAt: string;
  _status?: "draft" | "published";
}
export interface User {
  id: string;
  firstName: string;
  lastName: string;
  photo?: string | Media;
  roles: ("admin" | "editor")[];
  updatedAt: string;
  createdAt: string;
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface Client {
  id: string;
  name: string;
  logo: string | Media;
  url?: string;
  showInCarousel?: boolean;
  updatedAt: string;
  createdAt: string;
}
export interface Service {
  id: string;
  title: string;
  description: string;
  showInHomePage?: boolean;
  serviceContent?: {
    title: string;
    description: string;
    id?: string;
    blockName?: string;
    blockType: "subService";
  }[];
  updatedAt: string;
  createdAt: string;
}
